version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: laboratorio_db
    environment:
      POSTGRES_DB: laboratorio_db
      POSTGRES_USER: laboratorio_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password_seguro}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - laboratorio_network

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: laboratorio_backend
    environment:
      - DATABASE_URL=postgresql://laboratorio_user:${DB_PASSWORD:-password_seguro}@db:5432/laboratorio_db
      - ENVIRONMENT=production
      - DEBUG=False
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=${CORS_ORIGINS:-https://tu-dominio.com}
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - laboratorio_network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    container_name: laboratorio_frontend
    environment:
      - VITE_API_URL=http://backend:8000
      - VITE_ENVIRONMENT=production
    ports:
      - "3001:3001"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - laboratorio_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: laboratorio_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - laboratorio_network

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: laboratorio_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - laboratorio_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  laboratorio_network:
    driver: bridge
